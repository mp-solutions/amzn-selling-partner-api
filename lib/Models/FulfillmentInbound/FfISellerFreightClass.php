<?php
/**
 * FfISellerFreightClass
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  MPSolutions\AmznSellingPartnerApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * The version of the OpenAPI document: v0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace MPSolutions\AmznSellingPartnerApi\Models\FulfillmentInbound;
use \MPSolutions\AmznSellingPartnerApi\Models\ModelInterface;
use \MPSolutions\AmznSellingPartnerApi\ObjectSerializer;

/**
 * FfISellerFreightClass Class Doc Comment
 *
 * @category Class
 * @description The freight class of the shipment. For information about determining the freight class, contact the carrier.
 * @package  MPSolutions\AmznSellingPartnerApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class FfISellerFreightClass
{
    /**
     * Possible values of this enum
     */
    public const _50 = '50';
    public const _50_0 = '50.0'; // non-exist on documentation
    public const _55 = '55';
    public const _55_0 = '55.0'; // non-exist on documentation
    public const _60 = '60';
    public const _60_0 = '60.0'; // non-exist on documentation
    public const _65 = '65';
    public const _65_0 = '65.0'; // non-exist on documentation
    public const _70 = '70';
    public const _70_0 = '70.0'; // non-exist on documentation
    public const _77_5 = '77.5';
    public const _85 = '85';
    public const _85_0 = '85.0'; // non-exist on documentation
    public const _92_5 = '92.5';
    public const _100 = '100';
    public const _100_0 = '100.0'; // non-exist on documentation
    public const _110 = '110';
    public const _110_0 = '10.0'; // non-exist on documentation
    public const _125 = '125';
    public const _125_0 = '125.0'; // non-exist on documentation
    public const _150 = '150';
    public const _150_0 = '150.0'; // non-exist on documentation
    public const _175 = '175';
    public const _175_0 = '175.0'; // non-exist on documentation
    public const _200 = '200';
    public const _200_0 = '200.0'; // non-exist on documentation
    public const _250 = '250';
    public const _250_0 = '250.0'; // non-exist on documentation
    public const _300 = '300';
    public const _300_0 = '300.0'; // non-exist on documentation
    public const _400 = '400';
    public const _400_0 = '400.0'; // non-exist on documentation
    public const _500 = '500';
    public const _500_0 = '500.0'; // non-exist on documentation
    
	/**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::_50,
            self::_50_0,
            self::_55,
            self::_55_0,
            self::_60,
            self::_60_0,
            self::_65,
            self::_65_0,
            self::_70,
            self::_70_0,
            self::_77_5,
            self::_85,
            self::_85_0,
            self::_92_5,
            self::_100,
            self::_100_0,
            self::_110,
            self::_110_0,
            self::_125,
            self::_125_0,
            self::_150,
            self::_150_0,
            self::_175,
            self::_175_0,
            self::_200,
            self::_200_0,
            self::_250,
            self::_250_0,
            self::_300,
            self::_300_0,
            self::_400,
            self::_400_0,
            self::_500,
            self::_500_0
        ];
    }
}


